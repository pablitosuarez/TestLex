package com.base100.lex100.component.enumeration;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.faces.model.SelectItem;

import org.jboss.seam.Component;
import org.jboss.seam.ScopeType;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.Scope;
import org.jboss.seam.international.Messages;

import com.base100.expand.seam.framework.component.enumeration.AbstractEnumeration;
import com.base100.expand.seam.framework.component.enumeration.ILabeledEnum;
import com.base100.lex100.entity.ConexidadDeclarada;
import com.base100.lex100.manager.camara.CamaraManager;
import com.base100.lex100.mesaEntrada.ingreso.ExpedienteMeAdd;


/**
 * Enumeration.
 * 
 * Generated by Expand.
 *
 */
@Name("tipoAsignacionEnumeration")
@Scope(ScopeType.CONVERSATION)
public class TipoAsignacionEnumeration extends AbstractEnumeration {
	public static final String TYPE_SORTEO = "S";
	public static final String TYPE_CONEXIDAD = "C";
	public static final String TYPE_ASIGNACION_TURNO = "J";
	public static final String TYPE_MANUAL = "MAN";
	//public static final String TYPE_OFICIO = "O";
	public static final String TYPE_ESPECIAL = "E";
	public static final String TYPE_MEDIACION = "MD";
	
	public static final String GRUPO_PENAL = "P";
	public static final String GRUPO_CIVIL = "C";
	//COMERCIAL
	public static final String GRUPO_COMERCIAL = "CO";
	//COMERCIAL
	
	private Type[] typesCivil;
	private Type[] typesPenal;
	private Type[] typesComercial;

	private Map<Object,ILabeledEnum> typesJuzgado;
	private Map<Object,ILabeledEnum> typesSala;
	private Map<Object,ILabeledEnum> typesTO;
	private Map<Object,ILabeledEnum> typesCasacion;
	private Map<Object,ILabeledEnum> typesCorteSuprema;

	/* Unificada PB.
	 * 
	Tipos de asignacion de juzgado - 1era instancia	Materia
	1	Conexidad solicitada						Ambas
	2	Conexidad automatica o detectada			Civil
	2	Asignacion por Identidad de partes			Penal
	3	Sorteo										Ambas
	5	Radicacion Previa							Ambas
	T	Turnos										Ambas
	C	Conexidad otorgada por la Cámara			Ambas
	M	Juzgado de la Mediacion						Civil
					
	Tipos de asignacion de sala - 2da instancia		Materia
	1	Radicación previa - Prevención				Ambas
	2	Conexidad automatica o detectada			Civil
	3	Sorteo										Ambas
	T	Turnos										Ambas
	C	Conexidad otorgada por la Cámara			Ambas
	*/
	
	public enum Type implements ILabeledEnum {
	
		asignacion_Juzgado_Manual("tipoAsignacionEnumeration.asignacion_Juzgado_Manual", "1", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_Conexidad_Automatica("tipoAsignacionEnumeration.asignacion_Juzgado_Conexidad_Automatica", "2", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_Sorteo("tipoAsignacionEnumeration.asignacion_Juzgado_Sorteo", "3", null, TYPE_SORTEO, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_RadicacionPrevia("tipoAsignacionEnumeration.asignacion_Juzgado_radicacionPrevia", "5", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_Turno("tipoAsignacionEnumeration.asignacion_Juzgado_Turno", "T", null, TYPE_ASIGNACION_TURNO, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_AnteriorAlSistema("tipoAsignacionEnumeration.asignacion_AnteriorAlSistema", "9", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_RetornoPorNulidad("tipoAsignacionEnumeration.asignacion_Juzgado_RetornoPorNulidad", "10", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, GRUPO_PENAL),
		asignacion_Juzgado_ConexidadOtorgadaCamara("tipoAsignacionEnumeration.asignacion_ConexidadOtorgadaCamara", "C", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),

		asignacion_Sala_Manual("tipoAsignacionEnumeration.asignacion_Sala_Manual", "1", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Conexidad_Automatica("tipoAsignacionEnumeration.asignacion_Sala_Conexidad_Automatica", "2", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Sorteo("tipoAsignacionEnumeration.asignacion_Sala_Sorteo", "3", null, TYPE_SORTEO, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_RadicacionPrevia("tipoAsignacionEnumeration.asignacion_Sala_RadicacionPrevia", "5", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Turno("tipoAsignacionEnumeration.asignacion_Sala_Turno", "T", null, TYPE_ASIGNACION_TURNO, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_AnteriorAlSistema("tipoAsignacionEnumeration.asignacion_AnteriorAlSistema", "9", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_ConexidadOtorgadaCamara("tipoAsignacionEnumeration.asignacion_ConexidadOtorgadaCamara", "C", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		
		asignacion_TO_Manual("tipoAsignacionEnumeration.asignacion_TO_Manual", "1", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL, null),
		asignacion_TO_Conexidad_Automatica("tipoAsignacionEnumeration.asignacion_TO_Conexidad_Automatica", "2", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL, null),
		asignacion_TO_Sorteo("tipoAsignacionEnumeration.asignacion_TO_Sorteo", "3", null, TYPE_SORTEO, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL, null),
		asignacion_TO_RetornoPorNulidad("tipoAsignacionEnumeration.asignacion_TO_RetornoPorNulidad", "4", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL, GRUPO_PENAL),
		asignacion_TO_IngresoPorIncompetencia("tipoAsignacionEnumeration.asignacion_TO_IngresoPorIncompetencia", "5", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL, GRUPO_PENAL),
		asignacion_TO_AnteriorAlSistema("tipoAsignacionEnumeration.asignacion_AnteriorAlSistema", "6", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL, GRUPO_PENAL),
		asignacion_TO_Turno("tipoAsignacionEnumeration.asignacion_TO_Turno", "T", null, TYPE_ASIGNACION_TURNO, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL, null),

		asignacion_Sala_Casacion_Manual("tipoAsignacionEnumeration.asignacion_Sala_Manual", "1", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION, null),
		asignacion_Sala_Casacion_Conexidad_Automatica("tipoAsignacionEnumeration.asignacion_Sala_Conexidad_Automatica", "2", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION, null),
		asignacion_Sala_Casacion_Sorteo("tipoAsignacionEnumeration.asignacion_Sala_Sorteo", "3", null, TYPE_SORTEO, TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION, null),
		asignacion_Sala_Casacion_Turno("tipoAsignacionEnumeration.asignacion_Sala_Turno", "T", null, TYPE_ASIGNACION_TURNO, TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION, null),
		asignacion_Sala_Casacion_AnteriorAlSistema("tipoAsignacionEnumeration.asignacion_AnteriorAlSistema", "9", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION, null),
		asignacion_Sala_Casacion_ConexidadOtorgadaCamara("tipoAsignacionEnumeration.asignacion_ConexidadOtorgadaCamara", "C", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION, null),
		
		asignacion_Corte_Suprema_Manual("tipoAsignacionEnumeration.asignacion_Corte_Suprema_Manual", "1", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_CORTESUPREMA, null),
		asignacion_Corte_Suprema_AnteriorAlSistema("tipoAsignacionEnumeration.asignacion_AnteriorAlSistema", "9", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_CORTESUPREMA, null),
		
		
//		asignacion_Conexidad_Automatica("tipoAsignacionEnumeration.asignacion_Conexidad_Automatica", "2", null, TYPE_CONEXIDAD),
		asignacion_Conexidad_AutomaticaSucesorio("tipoAsignacionEnumeration.asignacion_Conexidad_AutomaticaSucesorio", "4", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, GRUPO_CIVIL),
		asignacion_Conexidad_AutomaticaDenunciaViolenciaFamiliar("tipoAsignacionEnumeration.asignacion_Conexidad_AutomaticaDenunciaViolenciaFamiliar", "10", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, GRUPO_CIVIL),
		asignacion_Conexidad_AutomaticaVoluntarias("tipoAsignacionEnumeration.asignacion_Conexidad_AutomaticaVoluntarias", "5", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, GRUPO_CIVIL),
		asignacion_Conexidad_AutomaticaVoluntariasFamilia("tipoAsignacionEnumeration.asignacion_Conexidad_AutomaticaVoluntariasFamilia", "6", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, GRUPO_CIVIL),
//		asignacion_Conexidad_Incidente("tipoAsignacionEnumeration.asignacion_Conexidad_Incidente", "b", null, TYPE_CONEXIDAD),
//		asignacion_Conexidad_AnteriorSistema("tipoAsignacionEnumeration.asignacion_Conexidad_AnteriorSistema", "9", null, TYPE_CONEXIDAD),
		asignacion_Conexidad_Denunciada("tipoAsignacionEnumeration.asignacion_Conexidad_Denunciada", "11", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, GRUPO_CIVIL),
//		asignacion_IniciadoJuzgado("tipoAsignacionEnumeration.asignacion_IniciadoJuzgado", "JU", null, TYPE_ASIGNACION_JUZGADO),
		asignacion_ProvenienteMediacion("tipoAsignacionEnumeration.asignacion_ProvenienteMediacion", "MC", null, TYPE_MEDIACION, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, GRUPO_CIVIL),
		asignacion_CargaDiferida("tipoAsignacionEnumeration.asignacion_CargaDiferida", "8", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
//		asignacion_Conexidad_Automatica_Sala("tipoAsignacionEnumeration.asignacion_Conexidad_Automatica_Sala", "1", null, TYPE_CONEXIDAD),

//		asignacion_Oficio("tipoAsignacionEnumeration.asignacion_Oficio", "12", null, TYPE_OFICIO),
//		asignacion_SecretariaEspecialCamara("tipoAsignacionEnum	eration.asignacion_SecretariaEspecialCamara", "13", null, TYPE_ESPECIAL);
		
// LABORAL - Juzgados
		asignacion_Juzgado_Prevencion_Declarada("tipoAsignacionEnumeration.asignacion_Juzgado_Prevencion_Declarada", "1P", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_Conexidad_por_Tema("tipoAsignacionEnumeration.asignacion_Juzgado_Conexidad_por_Tema", "1T", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_Prevencion_Automatica("tipoAsignacionEnumeration.asignacion_Juzgado_Prevencion_Automatica", "2P", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
		asignacion_Juzgado_Conexidad_Cruzada("tipoAsignacionEnumeration.asignacion_Juzgado_Conexidad_Cruzada", "2P", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, null),
// LABORAL - Salas 
		asignacion_Sala_Prevencion_Automatica_ppal_rhe("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Automatica_ppal_rhe", "L1", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Conexidad_por_Tema("tipoAsignacionEnumeration.asignacion_Sala_Conexidad_por_Tema", "L2", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Automatica("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Automatica", "L4", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Manual_ppal_rhe("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Manual_ppal_rhe", "L5", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Manual("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_manual", "L6", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Automatica_rhe_ppal("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Automatica_rhe_ppal", "L7", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Manual_rhe_ppal("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Manual_rhe_ppal", "L8", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Automatica_inc_ppal("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Automatica_inc_ppal", "L9", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Manual_inc_ppal("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Manual_inc_ppal", "L10", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Automatica_ppal_inc("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Automatica_ppal_inc", "L11", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Manual_ppal_inc("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Manual_ppal_inc", "L12", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Automatica_exadm_rec("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Automatica_exadm_rec", "L13", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Manual_exadm_rec("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Manual_exadm_rec", "L14", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Automatica_rec_exadm("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Automatica_rec_exadm", "L15", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		asignacion_Sala_Prevencion_Manual_rec_exadm("tipoAsignacionEnumeration.asignacion_Sala_Prevencion_Manual_rec_exadm", "L16", null, TYPE_MANUAL, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES, null),
		
		//COMERCIAL
		asignacion_Conexidad_Automatica("tipoAsignacionEnumeration.asignacion_Conexidad_Automatica", "10", null, TYPE_CONEXIDAD, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA, GRUPO_COMERCIAL),
		//COMERCIAL
		;
	
		private String label;
		private Object value;
		private String image;
		private String type;
		private int tipoInstancia;
		private String grupo;
		
		private Type(String label) {
			this.label = label;
			this.value = this;
		}

		private Type(String label, Object value) {
			this.label = label;
			this.value = value;
		}


		private Type(String label, Object value, String image, String type, int tipoInstancia, String grupo) {
			this.label = label;
			this.value = value;
			this.image = image;
			this.type = type;
			this.tipoInstancia = tipoInstancia;
			this.grupo = grupo;
		}

		public String getLabel() {
			return label;
		}
	
		public Object getValue() {
			return value;
		}

		public String getImage() {
			return image;
		}
		
		public String getName() {
			return this.name();
		}

		public String getType() {
			return type;
		}

		public int getTipoInstancia() {
			return tipoInstancia;
		}

		public void setTipoInstancia(int tipoInstancia) {
			this.tipoInstancia = tipoInstancia;
		}

		public String getGrupo() {
			return grupo;
		}

		public void setGrupo(String grupo) {
			this.grupo = grupo;
		}
				
	}
	
	public static TipoAsignacionEnumeration instance(){
		return (TipoAsignacionEnumeration) Component.getInstance(TipoAsignacionEnumeration.class, true);
	}

	public static TipoAsignacionEnumeration.Type getTipoTurno(TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return Type.asignacion_TO_Turno;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return Type.asignacion_Sala_Turno;				
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return Type.asignacion_Sala_Casacion_Turno;				
		}else{
			return Type.asignacion_Juzgado_Turno;
		}
	}

	public static TipoAsignacionEnumeration.Type getTipoSorteo(TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return Type.asignacion_TO_Sorteo;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return Type.asignacion_Sala_Sorteo;				
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return Type.asignacion_Sala_Casacion_Sorteo;				
		}else{
			return Type.asignacion_Juzgado_Sorteo;
		}
	}

	public static TipoAsignacionEnumeration.Type getTipoRadicacionAnterior(TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return Type.asignacion_TO_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return Type.asignacion_Sala_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return Type.asignacion_Sala_Casacion_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.corteSuprema){
			return Type.asignacion_Corte_Suprema_Manual;
		}else{
			return Type.asignacion_Juzgado_Manual;
		}
	}

	public static TipoAsignacionEnumeration.Type getTipoAsignacionConexidad(TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return Type.asignacion_TO_Conexidad_Automatica;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return Type.asignacion_Sala_Conexidad_Automatica;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return Type.asignacion_Sala_Casacion_Conexidad_Automatica;
		}else{
			return Type.asignacion_Juzgado_Conexidad_Automatica;
		}
	}
	
	public static TipoAsignacionEnumeration.Type getTipoAsignacionConexidadDenunciada(TipoRadicacionEnumeration.Type tipoRadicacion, ConexidadDeclarada conexidadDeclarada) {
		if (conexidadDeclarada != null) {
			if (conexidadDeclarada.isSolicitadaPorMesa()) {
				if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
					return Type.asignacion_Sala_Conexidad_por_Tema;
				} else if(tipoRadicacion == TipoRadicacionEnumeration.Type.juzgado){
					return Type.asignacion_Juzgado_Conexidad_por_Tema;
				}
			} else if (conexidadDeclarada.isPrevencion()) {
				if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
					return Type.asignacion_Sala_Prevencion_Manual;
				} else if(tipoRadicacion == TipoRadicacionEnumeration.Type.juzgado){
					return Type.asignacion_Juzgado_Prevencion_Declarada;
				}
			}
		}
		return getTipoAsignacionManual(tipoRadicacion);	// Revisar
	}
	
	public static TipoAsignacionEnumeration.Type getTipoAsignacionManual(TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return Type.asignacion_TO_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return Type.asignacion_Sala_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return Type.asignacion_Sala_Casacion_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.corteSuprema){
			return Type.asignacion_Corte_Suprema_Manual;
		}else{
			return Type.asignacion_Juzgado_Manual;
		}
	}
	
	public static TipoAsignacionEnumeration.Type getTipoAsignacionRadicacionPrevia(TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return Type.asignacion_TO_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return Type.asignacion_Sala_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return Type.asignacion_Sala_Casacion_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.corteSuprema || CamaraManager.isCamaraActualCorteSuprema()){
			return Type.asignacion_Corte_Suprema_Manual;
		}else{
			return Type.asignacion_Juzgado_Manual;
		}
	}

	public static TipoAsignacionEnumeration.Type getTipoAsignacionAnteriorAlSistema(TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return Type.asignacion_TO_AnteriorAlSistema;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return Type.asignacion_Sala_AnteriorAlSistema;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return Type.asignacion_Sala_Casacion_AnteriorAlSistema;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.corteSuprema){
			return Type.asignacion_Corte_Suprema_AnteriorAlSistema;
		}else{
			return Type.asignacion_Juzgado_AnteriorAlSistema;
		}
	}

	public static TipoAsignacionEnumeration.Type getTipoAsignacionIngresoDiferido(TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return Type.asignacion_TO_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return Type.asignacion_Sala_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return Type.asignacion_Sala_Casacion_Manual;
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.corteSuprema){
			return Type.asignacion_Corte_Suprema_Manual;
		}else{
			return Type.asignacion_Juzgado_Manual;
		}
	}

	protected ILabeledEnum[] getEnumValues() {
		return Type.values();
	}

	public Type[] getTypesCamara() {
		if (CamaraManager.isCamaraActualCOM()) {
			return getTypesComercial();
		}
		if(CamaraManager.isCamaraActualCivilCABA()) {
			return getTypesCivil();
		} else {
			return getTypesPenal();
		}
	}
	
	public ILabeledEnum getType(Object value, Integer codigoTipoInstancia) {
		if(TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA.equals(codigoTipoInstancia)) {
				return getTypesJuzgado().get(value);
		} else if(TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES.equals(codigoTipoInstancia)) {
			return getTypesSala().get(value);
		} else if(TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL.equals(codigoTipoInstancia)) {
			return getTypesTO().get(value);
		} else if(TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION.equals(codigoTipoInstancia)) {
			return getTypesCasacion().get(value);
		} else if(TipoInstanciaEnumeration.TIPO_INSTANCIA_CORTESUPREMA.equals(codigoTipoInstancia)) {
			return getTypesCorteSuprema().get(value);
		}
		return getType(value);
	}

	public Type[] getTypesCivil() {
		if (typesCivil == null) {
			List<Type >civilList = new ArrayList<Type>();
			Type[] types = Type.values();
			for(int i = 0; i< types.length; i++){
				if(((types[i].getGrupo() == null) || GRUPO_CIVIL.equals(types[i].getGrupo()))) {
					civilList.add(types[i]);
				}
			}
			typesCivil = civilList.toArray(new Type[civilList.size()]);
		}
		return typesCivil;
	}
	
	//COMERCIAL
	public Type[] getTypesComercial() {
		if (typesComercial == null) {
			List<Type >civilList = new ArrayList<Type>();
			Type[] types = Type.values();
			for(int i = 0; i< types.length; i++){
				if(((types[i].getGrupo() == null) || GRUPO_COMERCIAL.equals(types[i].getGrupo()))) {
					civilList.add(types[i]);
				}else{
					if (GRUPO_CIVIL.equals(types[i].getGrupo()) && 
							!TipoAsignacionEnumeration.Type.asignacion_Conexidad_AutomaticaDenunciaViolenciaFamiliar.equals(types[i])) {
						civilList.add(types[i]);
					}
				}
			}
			typesComercial = civilList.toArray(new Type[civilList.size()]);
		}
		return typesComercial;
	}
	//COMERCIAL

	public Type[] getTypesPenal() {
		if (typesPenal == null) {
			List<Type>penalList = new ArrayList<Type>();
			Type[] types = Type.values();
			for(int i = 0; i< types.length; i++){
				if(((types[i].getGrupo() == null) || GRUPO_PENAL.equals(types[i].getGrupo()))) {
					penalList.add(types[i]);
				}
			}
			typesPenal = penalList.toArray(new Type[penalList.size()]);
		}
		return typesPenal;
	}

	public Map<Object, ILabeledEnum> getTypesJuzgado() {
		if (typesJuzgado == null) {
			typesJuzgado = new HashMap<Object,ILabeledEnum>();
			Type[] types = getTypesCamara();
			for(int i = 0; i< types.length; i++){
				if(TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA.equals(types[i].getTipoInstancia())) {
					typesJuzgado.put(types[i].getValue(), types[i]);
				}
			}
		}
		return typesJuzgado;
	}

	public Map<Object, ILabeledEnum> getTypesSala() {
		if (typesSala == null) {
			typesSala = new HashMap<Object,ILabeledEnum>();
			Type[] types = getTypesCamara();
			for(int i = 0; i< types.length; i++){
				if(TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES.equals(types[i].getTipoInstancia())) {
					typesSala.put(types[i].getValue(), types[i]);
				}
			}
		}
		return typesSala;
	}

	public Map<Object, ILabeledEnum> getTypesTO() {
		if (typesTO == null) {
			typesTO = new HashMap<Object,ILabeledEnum>();
			Type[] types = getTypesCamara();
			for(int i = 0; i< types.length; i++){
				if(TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL.equals(types[i].getTipoInstancia())) {
					typesTO.put(types[i].getValue(), types[i]);
				}
			}
		}
		return typesTO;
	}

	public Map<Object, ILabeledEnum> getTypesCasacion() {
		if (typesCasacion == null) {
			typesCasacion = new HashMap<Object,ILabeledEnum>();
			Type[] types = getTypesCamara();
			for(int i = 0; i< types.length; i++){
				if(TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION.equals(types[i].getTipoInstancia())) {
					typesCasacion.put(types[i].getValue(), types[i]);
				}
			}
		}
		return typesCasacion;
	}

	public Map<Object, ILabeledEnum> getTypesCorteSuprema() {
		if (typesCorteSuprema == null) {
			typesCorteSuprema = new HashMap<Object,ILabeledEnum>();
			Type[] types = getTypesCamara();
			for(int i = 0; i< types.length; i++){
				if(TipoInstanciaEnumeration.TIPO_INSTANCIA_CORTESUPREMA.equals(types[i].getTipoInstancia())) {
					typesCorteSuprema.put(types[i].getValue(), types[i]);
				}
			}
		}
		return typesCorteSuprema;
	}

	public String getLabelByRadicacion(Object value, String tipoRadicacion) {
		if(TipoRadicacionEnumeration.Type.tribunalOral.getValue().equals(tipoRadicacion)){
			return getLabel(value, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL);
		}else if(TipoRadicacionEnumeration.isAnySala(tipoRadicacion)){
			return getLabel(value, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES);
		}else{
			return getLabel(value, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA);
		}
	}

	public String getLabel(Object value, TipoRadicacionEnumeration.Type tipoRadicacion) {
		if(tipoRadicacion == TipoRadicacionEnumeration.Type.tribunalOral){
			return getLabel(value, TipoInstanciaEnumeration.TIPO_INSTANCIA_TRIBUNAL_ORAL);
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.sala){
			return getLabel(value, TipoInstanciaEnumeration.TIPO_INSTANCIA_APELACIONES);
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.salaCasacion){
			return getLabel(value, TipoInstanciaEnumeration.TIPO_INSTANCIA_CASACION);
		}else if(tipoRadicacion == TipoRadicacionEnumeration.Type.corteSuprema){
			return getLabel(value, TipoInstanciaEnumeration.TIPO_INSTANCIA_CORTESUPREMA);
		}else{
			return getLabel(value, TipoInstanciaEnumeration.TIPO_INSTANCIA_PRIMERA_INSTANCIA);
		}
	}
	
	public String getLabel(Object value, Integer codigoTipoInstancia) {
		String result = null;
		ILabeledEnum labeledEnum = getType(value, codigoTipoInstancia);
		if (labeledEnum != null) {
			result = labeledEnum.getLabel();
		}
		if (result != null) {
			result = Messages.instance().get(result);
		}
		return result;
	}

	public static Type fromValue(String tipoAsignacion,	Integer tipoInstancia, String grupo) {
		if ((tipoAsignacion != null) && (tipoInstancia != null)) {
			Type[] types = Type.values();
			for(int i = 0; i< types.length; i++){
				if(tipoInstancia.equals(types[i].getTipoInstancia()) && tipoAsignacion.equals(types[i].getValue()) && ((types[i].getGrupo() == null) || types[i].getGrupo().equals(grupo))){
					return types[i];
				}
			}
		}
		return null;
	}

	public List<SelectItem> getItemsIngresoDiferido(ExpedienteMeAdd expedienteMeAdd) {
		List<SelectItem> items = new ArrayList<SelectItem>();
		items.add(new SelectItem(null, Messages.instance().get("cambioAsignacionExp.oficina.lookup_select")));
		if (TipoRadicacionEnumeration.Type.juzgado.equals(expedienteMeAdd.getTipoRadicacion())) {
			items.add(new SelectItem(Type.asignacion_Juzgado_Conexidad_Automatica.getValue().toString(), getLabel(Type.asignacion_Juzgado_Conexidad_Automatica.getValue())));
			items.add(new SelectItem(Type.asignacion_Juzgado_Sorteo.getValue().toString(), getLabel(Type.asignacion_Juzgado_Sorteo.getValue())));
			items.add(new SelectItem(Type.asignacion_Juzgado_Turno.getValue().toString(), getLabel(Type.asignacion_Juzgado_Turno.getValue())));
		} else {
			items.add(new SelectItem(Type.asignacion_Sala_Conexidad_Automatica.getValue().toString(), getLabel(Type.asignacion_Sala_Conexidad_Automatica.getValue())));
			items.add(new SelectItem(Type.asignacion_Sala_Sorteo.getValue().toString(), getLabel(Type.asignacion_Sala_Sorteo.getValue())));
			items.add(new SelectItem(Type.asignacion_Sala_Manual.getValue().toString(), getLabel(Type.asignacion_Sala_Manual.getValue())));
		}
		return items;	
	}

}

