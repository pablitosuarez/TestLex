package com.base100.lex100.entity;
// Generated by Expand 4.0.0 

import static javax.persistence.GenerationType.SEQUENCE;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.base100.expand.annotation.ControlType;
import com.base100.expand.annotation.DataDefinition;
import com.base100.expand.annotation.EntityDefinition;
import com.base100.expand.annotation.EntityGroup;
import com.base100.expand.annotation.EntityIcon;
import com.base100.expand.annotation.GenerationProperty;
import com.base100.expand.annotation.Hidden;
import com.base100.expand.annotation.InteractiveModuleProperties;
import com.base100.expand.annotation.Lines;
import com.base100.expand.annotation.RestrictedEntity;
import com.base100.expand.annotation.SelectItem;
import com.base100.expand.annotation.SelectItems;
import com.base100.expand.annotation.index.IndexField;
import com.base100.lex100.component.audit.AbstractLogicalDeletion;
import com.base100.lex100.component.identity.IdentificableEntityListener;

/**
 * CondicionCnx generated by Expand 4.0.0
 */
@Entity
@EntityDefinition(label = "Condición de Conexidad", listLabel = "Condiciones de Conexidad", inlineEdition=true)
@Lines(joinProperty = "criterioCnx")
@EntityGroup("MesaEntrada")
@EntityIcon
@RestrictedEntity
@InteractiveModuleProperties( {
		@GenerationProperty(propertyName = "gridColumns", propertyValue = "1") })
@Table(name = "CONDICION_CNX")
@EntityListeners({IdentificableEntityListener.class})
public class CondicionCnx extends AbstractLogicalDeletion implements java.io.Serializable, IIdentificable {

     private Integer id;
     private String parametro;
     private String tipoComparacion;
     private String uuid;
     private CriterioCnx criterioCnx;

    public CondicionCnx() {
    }

    public CondicionCnx(String parametro, String tipoComparacion, CriterioCnx criterioCnx) {
        this.parametro = parametro;
        this.tipoComparacion = tipoComparacion;
        this.criterioCnx = criterioCnx;
    }

    public CondicionCnx(String parametro, String tipoComparacion, String uuid, CriterioCnx criterioCnx) {
       this.parametro = parametro;
       this.tipoComparacion = tipoComparacion;
       this.uuid = uuid;
       this.criterioCnx = criterioCnx;
    }

    @SequenceGenerator(name="generator", sequenceName="S_CONDICION_CNX", allocationSize=1)@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")    
	@DataDefinition(label = "Id Condicion Cnx")
    @Column(name="ID_CONDICION_CNX", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    
	@DataDefinition(label = "Parametro Condicion Cnx")
    @Column(name="PARAMETRO_CONDICION_CNX", nullable=false, length=256)
    public String getParametro() {
        return this.parametro;
    }
    
    public void setParametro(String parametro) {
        this.parametro = parametro;
    }
    
	@DataDefinition(label = "Tipo Comparacion", defaultValue = "P")
	@SelectItems(enumeration="tipoComparacionEnumeration", control=ControlType.Droplist,
		value={
			@SelectItem(value = "P",label = "Paralela"),
			@SelectItem(value = "X",label = "Cruzada"),
			@SelectItem(value = "I",label = "Indistinta")
		})
    @Column(name="TIPO_COMPARACION", nullable=false, length=1)
    public String getTipoComparacion() {
        return this.tipoComparacion;
    }
    
    public void setTipoComparacion(String tipoComparacion) {
        this.tipoComparacion = tipoComparacion;
    }
    
    @DataDefinition(label = "UUID",displayLength = 10, rendered="false")
	@IndexField
	@Hidden
    @Column(name="UUID", unique=true, length=40)
    public String getUuid() {
        return this.uuid;
    }
    
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }
    
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_CRITERIO_CNX", nullable=false)
    public CriterioCnx getCriterioCnx() {
        return this.criterioCnx;
    }
    
    public void setCriterioCnx(CriterioCnx criterioCnx) {
        this.criterioCnx = criterioCnx;
    }


}


