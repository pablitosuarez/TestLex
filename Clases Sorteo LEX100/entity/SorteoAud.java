package com.base100.lex100.entity;
// Generated by Expand 4.0.0 

import com.base100.expand.annotation.*;
import com.base100.expand.annotation.index.IndexField;
import com.base100.lex100.component.audit.AbstractLogicalDeletion;
import com.base100.lex100.component.identity.IdentificableEntityListener;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.SEQUENCE;

import javax.persistence.EntityListeners;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.Min;

/**
 * Sorteo generated by Expand 4.0.0
 */
@Entity
@EntityDefinition(label = "Auditoria Sorteo", listLabel = "Auditoria Sorteo")
@EntityGroup("MesaEntrada.Auditoria")
@EntityIcon
@RestrictedEntity
@Table(name = "SORTEO_AUD")
public class SorteoAud implements java.io.Serializable {

     private Integer id;
     private Integer idSorteo;
     private String codigo;
     private String descripcion;
     private String rubros;
     private String rubrosAsignacion;
     private int conTurno;
     private Integer bolasPorOficina;
     private int minimoNumeroBolas;
     private int rangoMinimos;
     private String uuid;
     private Camara camara;
     private Materia materia;
     private String grupoMateria;
     private TipoInstancia tipoInstancia;
     private TipoOficina tipoOficina;
     private Competencia competencia;
     private int status;
     private String usuario;
     private Date fechaModificacion;
     private String descripcionModificacion;
     private List<OficinaSorteo> oficinaSorteoList = new ArrayList<OficinaSorteo>(0);

    public SorteoAud() {
    }
	
    public SorteoAud(Sorteo sorteo) {
    	setBolasPorOficina(sorteo.getBolasPorOficina());
    	setCamara(sorteo.getCamara());
    	setCodigo(sorteo.getCodigo());
    	setCompetencia(sorteo.getCompetencia());
    	setConTurno(sorteo.getConTurno());
    	setDescripcion(sorteo.getDescripcion());
    	setIdSorteo(sorteo.getId());
    	setRangoMinimos(sorteo.getRangoMinimos());
    	setMinimoNumeroBolas(sorteo.getMinimoNumeroBolas());
    	setRubros(sorteo.getRubros());
    	setRubrosAsignacion(sorteo.getRubrosAsignacion());
    	setMateria(sorteo.getMateria());
    	setGrupoMateria(grupoMateria);
    	setGrupoMateria(sorteo.getGrupoMateria());
    	setStatus(sorteo.getStatus());
    	setTipoInstancia(sorteo.getTipoInstancia());
    	setTipoOficina(sorteo.getTipoOficina());
    }
    
    @SequenceGenerator(name="generator", sequenceName="S_SORTEO_AUD", allocationSize=1)@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")    
	@DataDefinition(label = "Id Sorteo Aud")
    @Column(name="ID_SORTEO_AUD", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    
	@DataDefinition(label = "Codigo Sorteo")
    @Column(name="CODIGO_SORTEO", length=10)
    public String getCodigo() {
        return this.codigo;
    }
    
    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }
    
	@DataDefinition(label = "Descripcion Sorteo")
    @Column(name="DESCRIPCION_SORTEO", length=200)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    @DataDefinition(label = "Rubros")
    @Column(name="RUBROS", length=256)
    public String getRubros() {
        return this.rubros;
    }
    
    public void setRubros(String rubros) {
        this.rubros = rubros;
    }
    
    @DataDefinition(label = "Rubros")
    @Column(name="RUBROS_ASIGNACION", length=256)
    public String getRubrosAsignacion() {
        return this.rubrosAsignacion;
    }
    
    public void setRubrosAsignacion(String rubrosAsignacion) {
        this.rubrosAsignacion = rubrosAsignacion;
    }
    
	@DataDefinition(label = "Con Turno")
    @Column(name="CON_TURNO", nullable=false)
    public int getConTurno() {
        return this.conTurno;
    }
    
    public void setConTurno(int conTurno) {
        this.conTurno = conTurno;
    }
    
	@DataDefinition(label = "Bolas Por Oficina")
    @Column(name="BOLAS_POR_OFICINA")
    public Integer getBolasPorOficina() {
        return this.bolasPorOficina;
    }
    
    public void setBolasPorOficina(Integer bolasPorOficina) {
        this.bolasPorOficina = bolasPorOficina;
    }

    @DataDefinition(label = "UUID",displayLength = 10,disabled = true)
	@IndexField
	@Hidden
    @Column(name="UUID", unique=true, length=40)
    public String getUuid() {
        return this.uuid;
    }
    
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }
    
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_CAMARA")
    public Camara getCamara() {
        return this.camara;
    }
    
    public void setCamara(Camara camara) {
        this.camara = camara;
    }

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_TIPO_INSTANCIA", nullable=false)
	@SelectItems(enumeration = "tipoInstanciaEnumeration",control=ControlType.Droplist)
    public TipoInstancia getTipoInstancia() {
        return this.tipoInstancia;
    }
    
    public void setTipoInstancia(TipoInstancia tipoInstancia) {
        this.tipoInstancia = tipoInstancia;
    }

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_COMPETENCIA")
	@SelectItems(enumeration = "competenciaEnumeration",control=ControlType.Droplist)
    public Competencia getCompetencia() {
        return this.competencia;
    }
    
    public void setCompetencia(Competencia competencia) {
        this.competencia = competencia;
    }

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_TIPO_OFICINA", nullable=false)
	@SelectItems(enumeration = "tipoOficinaEnumeration",control=ControlType.Droplist)
    public TipoOficina getTipoOficina() {
        return this.tipoOficina;
    }
    
    public void setTipoOficina(TipoOficina tipoOficina) {
        this.tipoOficina = tipoOficina;
    }

	@OneToMany(fetch=FetchType.LAZY, mappedBy="sorteo")
	@OrderBy("orden")
    public List<OficinaSorteo> getOficinaSorteoList() {
        return this.oficinaSorteoList;
    }
    
    public void setOficinaSorteoList(List<OficinaSorteo> oficinaSorteoList) {
        this.oficinaSorteoList = oficinaSorteoList;
    }

    @Column(name="RANGO_MINIMOS")
    @DataDefinition(label="Rango para cálculo de mínimos", shortLabel="Rango mínimos", defaultValue="1")
    @Min(0)
	public int getRangoMinimos() {
		return rangoMinimos;
	}

	public void setRangoMinimos(int rangoMinimos) {
		this.rangoMinimos = rangoMinimos;
	}

	@Column(name="ID_SORTEO")
	public Integer getIdSorteo() {
		return idSorteo;
	}

	public void setIdSorteo(Integer idSorteo) {
		this.idSorteo = idSorteo;
	}

	@Column(name="STATUS")
	public int getStatus() {
		return status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name="USUARIO", length=100)
	public String getUsuario() {
		return usuario;
	}

	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}

	@Column(name="FECHA_MODIFICACION")
	@Temporal(TemporalType.TIMESTAMP)
	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@Column(name="DESCRIP_MODIFICACION", length=100)
	public String getDescripcionModificacion() {
		return descripcionModificacion;
	}

	public void setDescripcionModificacion(String descripcionModificacion) {
		this.descripcionModificacion = descripcionModificacion;
	}

    @Column(name="MINIMO_NUMERO_BOLAS")
    @DataDefinition(label="Minimo Numero de Bolas", shortLabel="Minimko Bolas", defaultValue="0")
    @Min(0)
	public int getMinimoNumeroBolas() {
		return minimoNumeroBolas;
	}

	public void setMinimoNumeroBolas(int minimoNumeroBolas) {
		this.minimoNumeroBolas = minimoNumeroBolas;
	}

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_MATERIA")
    public Materia getMateria() {
        return this.materia;
    }
    
    public void setMateria(Materia materia) {
        this.materia = materia;
    }
    @SelectItems(enumeration="grupoMateriaEnumeration", control=ControlType.Droplist,
    		value={
    		@SelectItem(label="Civil",value="C"),
    		@SelectItem(label="Penal",value="P")
    })
    
	@DataDefinition(label = "Grupo Materia", descriptionColumn=true)
    @Column(name="GRUPO_MATERIA", length=10)
    public String getGrupoMateria() {
        return this.grupoMateria;
    }
    
    public void setGrupoMateria(String grupoMateria) {
        this.grupoMateria = grupoMateria;
    }
}


