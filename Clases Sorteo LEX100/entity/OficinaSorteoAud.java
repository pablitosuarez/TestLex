package com.base100.lex100.entity;
// Generated by Expand 4.0.0 

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.base100.expand.annotation.DataDefinition;
import com.base100.expand.annotation.EntityDefinition;
import com.base100.expand.annotation.EntityGroup;
import com.base100.expand.annotation.EntityIcon;
import com.base100.expand.annotation.Hidden;
import com.base100.expand.annotation.PropertyList;
import com.base100.expand.annotation.PropertyLists;
import com.base100.expand.annotation.RestrictedEntity;
import com.base100.expand.annotation.index.IndexField;

/**
 * OficinaSorteo generated by Expand 4.0.0
 */
@Entity
@EntityDefinition(label = "Auditoria Oficina Sorteo", listLabel = "Auditoria Oficina Sorteo")
@EntityGroup("MesaEntrada.Auditoria")
@EntityIcon
@RestrictedEntity
@PropertyLists( {
	@PropertyList(name = "list", properties = {
			"usuario",
			"descripcionModificacion",
			"fechaModificacion",
			"sorteo",
			"orden",
			"oficina",
			"turno"
	})
})
@Table(name = "OFICINA_SORTEO_AUD")
public class OficinaSorteoAud implements java.io.Serializable {

     private Integer id;
     private Integer idOficinaSorteo;
     private boolean turno;
     private int orden;
     private String uuid;
     private Oficina oficina;
     private Sorteo sorteo;
     private int status;
//     private boolean inhabilitada;
     private String usuario;
     private Date fechaModificacion;
     private String descripcionModificacion;

    public OficinaSorteoAud() {
    }
	
    public OficinaSorteoAud(OficinaSorteo entity) {
		setIdOficinaSorteo(entity.getId());
		setOficina(entity.getOficina());
		setOrden(entity.getOrden());
		setSorteo(entity.getSorteo());
		setStatus(entity.getStatus());
		setTurno(entity.isTurno());
//		if (entity.getOficina() != null) {
//			setInhabilitada(entity.getOficina().isInhabilitada());
//		}
		setUuid(entity.getUuid());
	}

	@SequenceGenerator(name="generator", sequenceName="S_OFICINA_SORTEO_AUD", allocationSize=1)@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")    
	@DataDefinition(label = "Id Oficina Sorteo Aud")
    @Column(name="ID_OFICINA_SORTEO_AUD", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    
	@DataDefinition(label = "Turno")
    @Column(name="TURNO", nullable=false)
    public boolean isTurno() {
        return this.turno;
    }
    
    public void setTurno(boolean turno) {
        this.turno = turno;
    }
    
    @DataDefinition(label = "UUID",displayLength = 10,disabled = true)
	@IndexField
	@Hidden
    @Column(name="UUID", unique=true, length=40)
    public String getUuid() {
        return this.uuid;
    }
    
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }
    
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_OFICINA", nullable=false)
	@DataDefinition(label = "Oficina", filteredByGlobalSelection=false)
    public Oficina getOficina() {
        return this.oficina;
    }
    
    public void setOficina(Oficina oficina) {
        this.oficina = oficina;
    }
    
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_SORTEO", nullable=false)
    public Sorteo getSorteo() {
        return this.sorteo;
    }
    
    public void setSorteo(Sorteo sorteo) {
        this.sorteo = sorteo;
    }

	@DataDefinition(label = "Orden", defaultValue = "0")
    @Column(name="ORDEN", nullable=false)
    public int getOrden() {
        return this.orden;
    }
    
    public void setOrden(int orden) {
        this.orden = orden;
    }

	@Column(name="ID_OFICINA_SORTEO")
	public Integer getIdOficinaSorteo() {
		return idOficinaSorteo;
	}

	public void setIdOficinaSorteo(Integer idOficinaSorteo) {
		this.idOficinaSorteo = idOficinaSorteo;
	}
    
	@Column(name="STATUS")
	public int getStatus() {
		return status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name="USUARIO", length=100)
	public String getUsuario() {
		return usuario;
	}

	public void setUsuario(String usuario) {
		this.usuario = usuario;
	}

	@Column(name="FECHA_MODIFICACION")
	@Temporal(TemporalType.TIMESTAMP)
	@DataDefinition(label="Fecha Modificación", shortLabel="Fecha Mod.")
	public Date getFechaModificacion() {
		return fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@Column(name="DESCRIP_MODIFICACION", length=100)
	@DataDefinition(label="Operación")
	public String getDescripcionModificacion() {
		return descripcionModificacion;
	}

	public void setDescripcionModificacion(String descripcionModificacion) {
		this.descripcionModificacion = descripcionModificacion;
	}

//	@DataDefinition(label = "Inhabilitada", defaultValue = "0")
//    @Column(name="INHABILITADA", nullable=false)
//	public boolean isInhabilitada() {
//		return inhabilitada;
//	}
//
//	public void setInhabilitada(boolean inhabilitada) {
//		this.inhabilitada = inhabilitada;
//	}

}


