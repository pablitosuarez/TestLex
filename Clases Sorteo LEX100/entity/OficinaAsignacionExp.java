package com.base100.lex100.entity;
// Generated by Expand 4.0.0 

import static javax.persistence.GenerationType.SEQUENCE;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.jboss.seam.log.Logging;

import com.base100.expand.annotation.ControlType;
import com.base100.expand.annotation.DataDefinition;
import com.base100.expand.annotation.EntityDefinition;
import com.base100.expand.annotation.GenerationProperty;
import com.base100.expand.annotation.Hidden;
import com.base100.expand.annotation.InteractiveModuleProperties;
import com.base100.expand.annotation.Lines;
import com.base100.expand.annotation.RestrictedEntity;
import com.base100.expand.annotation.SelectItem;
import com.base100.expand.annotation.SelectItems;
import com.base100.expand.annotation.index.IndexField;
import com.base100.lex100.component.enumeration.TipoAsignacionLex100Enumeration;
import com.base100.lex100.component.enumeration.TipoAsignacionOficinaEnumeration;
import com.base100.lex100.component.identity.IdentificableEntityListener;
import com.base100.lex100.mesaEntrada.sorteo.ColaDeSorteo;

/**
 * OficinaAsignacionExp generated by Expand 4.0.0
 */
@Entity
@org.hibernate.annotations.Entity(dynamicUpdate=true)
@RestrictedEntity
@EntityDefinition(label = "Oficina Asignada", listLabel = "Oficinas Asignadas")
@Lines(joinProperty = "expediente")
@InteractiveModuleProperties( {
		@GenerationProperty(propertyName = "gridColumns", propertyValue = "1") })
@Table(name = "OFICINA_ASIGNACION_EXP")
@EntityListeners({IdentificableEntityListener.class})
public class OficinaAsignacionExp  implements java.io.Serializable, IIdentificable {

     private Integer id;
     private String codigoTipoCambioAsignacion;
     private String tipoAsignacionOficina;
     private String tipoAsignacion;
     private String tipoAsignacionLex100;
     private String tipoRadicacion;
     private Date fechaAsignacion;
     private String rubro;
     private Integer asesoria;
     private Integer defensoria;
     private Integer fiscalia;
     private Fiscalia fiscalFiscalia;
     private Fiscalia dependenciaFiscalia;
     private Mediador mediador;
     private String instructor;
     private String comentarios;
	 private String uuid;
     private Expediente expediente;
     private Oficina oficina;
     private Oficina secretaria;
     private String operador;
     private Oficina oficinaAsignadora;
     private Boolean compensado;
     private String codigoOrdenCirculacion;

     
     private Oficina oficinaColaboradora;
     private Oficina oficinaAnterior;
     
	private Expediente expedienteFusion;

    public OficinaAsignacionExp() {
    }

    public OficinaAsignacionExp(OficinaAsignacionExp oficinaAsignacionExp, String tipoAsignacionLex100) {
        this.tipoAsignacionOficina = oficinaAsignacionExp.tipoAsignacionOficina;
        this.tipoAsignacion = oficinaAsignacionExp.tipoAsignacion;
        this.tipoRadicacion = oficinaAsignacionExp.tipoRadicacion;
        this.fechaAsignacion = oficinaAsignacionExp.fechaAsignacion;
        this.rubro = oficinaAsignacionExp.rubro;
        this.asesoria = oficinaAsignacionExp.asesoria;
        this.defensoria = oficinaAsignacionExp.defensoria;
        this.fiscalia = oficinaAsignacionExp.fiscalia;
        this.instructor = oficinaAsignacionExp.instructor;
        this.comentarios = oficinaAsignacionExp.comentarios;
        this.oficina = oficinaAsignacionExp.oficina;
        this.secretaria = oficinaAsignacionExp.secretaria;
        this.operador = oficinaAsignacionExp.operador;
        this.oficinaAsignadora = oficinaAsignacionExp.oficinaAsignadora;        
        this.tipoAsignacionLex100 = tipoAsignacionLex100;
        this.oficinaAnterior = oficinaAsignacionExp.getOficinaAnterior();
        this.codigoTipoCambioAsignacion = oficinaAsignacionExp.getCodigoTipoCambioAsignacion();
        this.codigoOrdenCirculacion = oficinaAsignacionExp.getCodigoOrdenCirculacion();
        this.compensado = false;
    }
    
    public OficinaAsignacionExp(String tipoAsignacionOficina, Date fechaAsignacion, Expediente expediente) {
        this.tipoAsignacionOficina = tipoAsignacionOficina;
        this.fechaAsignacion = fechaAsignacion;
        this.expediente = expediente;
    }

    public OficinaAsignacionExp(CambioAsignacionExp cambioAsignacionExp){
    	updateFrom(cambioAsignacionExp, true);
    }
    
    public void updateFrom(CambioAsignacionExp cambioAsignacionExp, boolean isNew){
    	if (isNew) {
			this.tipoAsignacionOficina = TipoAsignacionOficinaEnumeration.Type.asignacion.getValue().toString();
    	} else {
			this.tipoAsignacionOficina = TipoAsignacionOficinaEnumeration.Type.reasignacion.getValue().toString();
    	}
    	this.tipoAsignacion = cambioAsignacionExp.getTipoAsignacion();
        this.tipoRadicacion = cambioAsignacionExp.getTipoRadicacion();
        this.fechaAsignacion = cambioAsignacionExp.getFechaAsignacion();
        this.rubro = cambioAsignacionExp.getRubro();
        this.asesoria = cambioAsignacionExp.getAsesoria();
        this.defensoria = cambioAsignacionExp.getDefensoria();
        this.fiscalia = cambioAsignacionExp.getFiscalia();
        this.instructor = cambioAsignacionExp.getInstructor();
        this.comentarios = cambioAsignacionExp.getComentarios();
        this.uuid = cambioAsignacionExp.getUuid();
        this.expediente = cambioAsignacionExp.getExpediente();
        this.oficina = cambioAsignacionExp.getOficina();
        this.secretaria = cambioAsignacionExp.getSecretaria();
        this.oficinaAsignadora = cambioAsignacionExp.getOficinaAsignadora();
        this.operador = cambioAsignacionExp.getOperador();
        this.tipoAsignacionLex100 = cambioAsignacionExp.getTipoAsignacionLex100();
        this.compensado = cambioAsignacionExp.getCompensado();
        this.oficinaAnterior = cambioAsignacionExp.getOficinaAnterior();
        this.codigoTipoCambioAsignacion = cambioAsignacionExp.getCodigoTipoCambioAsignacion();
        this.oficinaColaboradora = cambioAsignacionExp.getOficinaAsignadora();
    }
    
    @SequenceGenerator(name="generator", sequenceName="S_OFICINA_ASIGNACION_EXP", allocationSize=1)@Id @GeneratedValue(strategy=SEQUENCE, generator="generator")    
	@DataDefinition(label = "Id Oficina Asignacion Exp")
    @Column(name="ID_OFICINA_ASIGNACION_EXP", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    
	@DataDefinition(label = "Tipo Asignacion Oficina", defaultValue = "1")
	@SelectItems(enumeration = "tipoAsignacionOficinaEnumeration",control=ControlType.Droplist,
		value={
			@SelectItem(value = "A",label = "Asignación"),
			@SelectItem(value = "R",label = "Reasignación")
		})
    @Column(name="TIPO_ASIGNACION_OFICINA", nullable=false, length=1)
    public String getTipoAsignacionOficina() {
        return this.tipoAsignacionOficina;
    }
    
    public void setTipoAsignacionOficina(String tipoAsignacionOficina) {
        this.tipoAsignacionOficina = tipoAsignacionOficina;
    }

	@DataDefinition(label = "Tipo Asignacion")
    @Column(name="TIPO_ASIGNACION", length=10)	
	@SelectItems(enumeration = "tipoAsignacionEnumeration",control=ControlType.Droplist,
		value={
			@SelectItem(value = "2",label = "Asignacion.Conexidad.Automatica"),
			@SelectItem(value = "4",label = "Asignacion.Conexidad.AutomaticaSucesorio"),
			@SelectItem(value = "10",label = "Asignacion.Conexidad.AutomaticaDenuciaViolenciaFamiliar"),
			@SelectItem(value = "3",label = "Asignacion.Sorteo"),
			@SelectItem(value = "5",label = "Asignacion.Conexidad.AutomaticaVoluntarias"),
			@SelectItem(value = "6",label = "Asignacion.Conexidad.AutomaticaVoluntariasFamilia"),
			@SelectItem(value = "b",label = "Asignacion.Conexidad.Incidente"),
			@SelectItem(value = "9",label = "Asignacion.Conexidad.AnteriorSistema"),
			@SelectItem(value = "JU",label = "Asignacion.IniciadoJuzgado"),
			@SelectItem(value = "MC",label = "Asignacion.ProvenienteMediacion"),
			@SelectItem(value = "8",label = "Asignacion.CargaDiferida"),
			@SelectItem(value = "1",label = "Asignacion.Conexidad.Automatica.Sala"),
			@SelectItem(value = "3",label = "Asignacion.Sorteo.Sala")
		})
    public String getTipoAsignacion() {
        return this.tipoAsignacion;
	}

	public void setTipoAsignacion(String tipoAsignacion) {
		this.tipoAsignacion = tipoAsignacion;
	}    

	@DataDefinition(label = "Tipo Radicación")
	@SelectItems(enumeration = "tipoRadicacionEnumeration",control=ControlType.Droplist,
		value={
			@SelectItem(value = "J",label = "Juzgado"),
			@SelectItem(value = "JS",label = "Juzgado Sentencia"),
			@SelectItem(value = "S",label = "Sala"),
			@SelectItem(value = "TO",label = "Tribunal Oral"),
			@SelectItem(value = "SC",label = "Sala Casación")
		})
		@Column(name="TIPO_RADICACION", length=10)
    public String getTipoRadicacion() {
        return this.tipoRadicacion;
    }
    
    public void setTipoRadicacion(String tipoRadicacion) {
        this.tipoRadicacion = tipoRadicacion;
    }

    @Temporal(TemporalType.TIMESTAMP)
	@DataDefinition(label = "Fecha Asignacion")
    @Column(name="FECHA_ASIGNACION", nullable=false)
    public Date getFechaAsignacion() {
        return this.fechaAsignacion;
    }
    
    public void setFechaAsignacion(Date fechaAsignacion) {
        this.fechaAsignacion = fechaAsignacion;
    }
    
	@DataDefinition(label = "Rubro")
    @Column(name="RUBRO", length=10)
    public String getRubro() {
        return this.rubro;
    }
    
    public void setRubro(String rubro) {
        this.rubro = rubro;
    }
    
	@DataDefinition(label = "Asesoria")
    @Column(name="ASESORIA")
    public Integer getAsesoria() {
        return this.asesoria;
    }
    
    public void setAsesoria(Integer asesoria) {
        this.asesoria = asesoria;
    }
    
	@DataDefinition(label = "Defensoria")
    @Column(name="DEFENSORIA")
    public Integer getDefensoria() {
        return this.defensoria;
    }
    
    public void setDefensoria(Integer defensoria) {
        this.defensoria = defensoria;
    }
    
	@DataDefinition(label = "Fiscalia")
    @Column(name="FISCALIA")
    public Integer getFiscalia() {
        return this.fiscalia;
    }
    
    public void setFiscalia(Integer fiscalia) {
        this.fiscalia = fiscalia;
    }
    
	@DataDefinition(label = "Instructor")
    @Column(name="INSTRUCTOR", length=40)
    public String getInstructor() {
        return this.instructor;
    }
    
    public void setInstructor(String instructor) {
        this.instructor = instructor;
    }
    
    @DataDefinition(label = "Comentarios")
    @Column(name="COMENTARIOS", length=200)
    public String getComentarios() {
        return this.comentarios;
    }
    
    public void setComentarios(String comentarios) {
        this.comentarios = comentarios;
    }

	@ManyToOne(fetch=FetchType.LAZY, optional=false)
    @JoinColumn(name="ID_EXPEDIENTE")
    public Expediente getExpediente() {
        return this.expediente;
    }
    
    public void setExpediente(Expediente expediente) {
        this.expediente = expediente;
    }
    
	@ManyToOne(fetch=FetchType.LAZY, optional=false)
    @JoinColumn(name="ID_OFICINA")
    @SelectItems(enumeration="oficinaAsignacionEnumeration", control=ControlType.Autocomplete)
    public Oficina getOficina() {
        return this.oficina;
    }
    
    public void setOficina(Oficina oficina) {
        this.oficina = oficina;
    }

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_SECRETARIA")
    @SelectItems(enumeration="oficinaAsignacionEnumeration", control=ControlType.Autocomplete)
    public Oficina getSecretaria() {
        return this.secretaria;
    }
    
    public void setSecretaria(Oficina secretaria) {
        this.secretaria = secretaria;
    }

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_OFICINA_ASIGNADORA")
    public Oficina getOficinaAsignadora() {
        return this.oficinaAsignadora;
    }
    
    public void setOficinaAsignadora(Oficina oficinaAsignadora) {
        this.oficinaAsignadora = oficinaAsignadora;
    }
    
    
    
    
    @DataDefinition(label = "UUID",displayLength = 10,disabled = true)
	@IndexField
    @Column(name="UUID", unique=true, length=40)
    @Hidden
    public String getUuid() {
        return this.uuid;
    }
    
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

	@DataDefinition(label = "Operador")
    @Column(name="OPERADOR", length=40)
	public String getOperador() {
		return operador;
	}

	public void setOperador(String operador) {
		this.operador = operador;
	}

	@Transient
	public Oficina getOficinaConSecretaria(){
		return secretaria != null ? secretaria : oficina;
	}
	
	@Transient
	public String getDescripcionOficinaRadicacion() {
		StringBuffer descripcionOficinaRadicacion = new StringBuffer();
		if(getOficina() != null){
			if(getSecretaria() != null){
				if(getSecretaria().getNombre() == null){
					descripcionOficinaRadicacion.append(getSecretaria().getDescripcion());
				}else{
					String s = null;
//					s = getOficina().getNombre();
					if(s == null){
						s = getOficina().getDescripcion();
					}
					descripcionOficinaRadicacion.append(s).append(", ").append(getSecretaria().getNombre());
				}				 
			}else{
				descripcionOficinaRadicacion.append(getOficina().getDescripcion());
			}
		} 
		return descripcionOficinaRadicacion.toString();
	
	}

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_EXPEDIENTE_FUSION")
	public Expediente getExpedienteFusion() {
		return expedienteFusion;
	}

	public void setExpedienteFusion(Expediente expedienteFusion) {
		this.expedienteFusion = expedienteFusion;
	}

	@DataDefinition(label = "Tipo Asignación Lex100")
    @SelectItems(enumeration="tipoAsignacionLex100Enumeration", control=ControlType.Droplist,
		value={
			@SelectItem(value = "1",label = "Turno"),
			@SelectItem(value = "2",label = "Sorteo"),
			@SelectItem(value = "3",label = "Conexidad Automatica"),
			@SelectItem(value = "4",label = "Conexidad Denunciada"),
			@SelectItem(value = "5",label = "Conexidad Familia"),
			@SelectItem(value = "6",label = "Conexidad Seleccionada"),
			@SelectItem(value = "7",label = "Radicacion Previa"),
			@SelectItem(value = "8",label = "Ingreso Diferido"),
			@SelectItem(value = "9",label = "Anterior al Sistema"),
			@SelectItem(value = "10",label = "Manual"),
			@SelectItem(value = "11",label = "copiaAlPrincipal"),
			@SelectItem(value = "12",label = "copiaDesdePrincipal")
		})
    @Column(name="TIPO_ASIGNACION_LEX100")
	public String getTipoAsignacionLex100() {
		return tipoAsignacionLex100;
	}

	public void setTipoAsignacionLex100(String tipoAsignacionLex100) {
		this.tipoAsignacionLex100 = tipoAsignacionLex100;
	}

	@DataDefinition(label = "Compensado")
    @Column(name="COMPENSADO")
	public Boolean getCompensado() {
		return compensado;
	}

	public void setCompensado(Boolean compensado) {
		this.compensado = compensado;
	}
	
	@DataDefinition(label = "Codigo Tipo Cambio Asignacion")
    @Column(name="CODIGO_TIPO_CAMBIO_ASIGNACION", length=10)
    public String getCodigoTipoCambioAsignacion() {
        return this.codigoTipoCambioAsignacion;
    }
    
    public void setCodigoTipoCambioAsignacion(String codigoTipoCambioAsignacion) {
        this.codigoTipoCambioAsignacion = codigoTipoCambioAsignacion;
    }

	@Column(name="CODIGO_ORDEN_CIRCULACION")
	public String getCodigoOrdenCirculacion() {
		return codigoOrdenCirculacion;
	}
	public void setCodigoOrdenCirculacion(String codigoOrdenCirculacion) {
		this.codigoOrdenCirculacion = codigoOrdenCirculacion;
	}

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_OFICINA_ANTERIOR")
	public Oficina getOficinaAnterior() {
		return oficinaAnterior;
	}

	public void setOficinaAnterior(Oficina oficinaAnterior) {
		this.oficinaAnterior = oficinaAnterior;
	}
	
	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_OFICINA_COLABORADORA")
    public Oficina getOficinaColaboradora() {
        return this.oficinaColaboradora;
    }
    
    public void setOficinaColaboradora(Oficina oficinaColaboradora) {
        this.oficinaColaboradora = oficinaColaboradora;
    }

	@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_MEDIADOR")
	@DataDefinition(label = "Mediador")
	@SelectItems(enumeration = "mediadorEnumeration",control=ControlType.Autocomplete)
    public Mediador getMediador() {
        return this.mediador;
    }
    
    public void setMediador(Mediador mediador) {
        this.mediador = mediador;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_FISCALIA_FISCAL")
	@DataDefinition(label = "Fiscalia Fiscal")
    public Fiscalia getFiscalFiscalia() {
		return fiscalFiscalia;
	}
    
    public void setFiscalFiscalia(Fiscalia fiscalFiscalia) {
		this.fiscalFiscalia = fiscalFiscalia;
	}
    
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_FISCALIA")
	@DataDefinition(label = "Dependencia Fiscalia")
    public Fiscalia getDependenciaFiscalia() {
		return dependenciaFiscalia;
	}
    
    public void setDependenciaFiscalia(Fiscalia dependenciaFiscalia) {
		this.dependenciaFiscalia = dependenciaFiscalia;
		if(this.dependenciaFiscalia != null){
			this.fiscalia = dependenciaFiscalia.getCodigo();
		}
	}

//    @PrePersist @PreUpdate
//	public void actualizadaAsignacion() {
//    	System.out.println("OficinaAsignacionExp Orden Circulacion: " + ((getCodigoOrdenCirculacion() == null)? "-": getCodigoOrdenCirculacion()));
//    }

}


