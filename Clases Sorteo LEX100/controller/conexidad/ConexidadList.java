package com.base100.lex100.controller.entity.conexidad;

import java.util.List;

import org.jboss.seam.Component;
import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;

import com.base100.expand.seam.framework.entity.AbstractEntityHome;
import com.base100.expand.seam.framework.entity.AbstractEntitySearch;
import com.base100.lex100.component.audit.AbstractLogicalDeletionEntityList;
import com.base100.lex100.component.configuration.Configuration;
import com.base100.lex100.entity.Conexidad;

/**
 * Class for Conexidad List objects.
 * 
 * Generated by Expand.
 *
 */
@Name("conexidadList")
public class ConexidadList extends AbstractLogicalDeletionEntityList<Conexidad>
{
	@In(create=true)
	private Configuration configuration;
    @In(create=true)
    private ConexidadSearch conexidadSearch;
    @In(create=true)
    private ConexidadHome conexidadHome;
    private static final String[] FILTERS = {
		"lower(conexidad.tipo) like #{likePattern[conexidadSearch.filter.tipo]}",
		"conexidad.expedienteOrigen = #{conexidadSearch.filter.expedienteOrigen}",
		"conexidad.expedienteRelacionado = #{conexidadSearch.filter.expedienteRelacionado}",

    };

	public static ConexidadList instance() {
		return (ConexidadList) Component.getInstance(ConexidadList.class, true);
	}

    private static String[] byExpedienteReasignacionRestrictions ={
		"conexidad.expedienteOrigen.id = #{expedienteMeReasignacion.reasignacionEdit.expediente != null ? expedienteMeReasignacion.reasignacionEdit.expediente.id : null}",
		"0 < (select count(*) from OficinaAsignacionExp oa where oa.expediente = conexidad.expedienteRelacionado and oa.tipoRadicacion = #{expedienteMeReasignacion.tipoRadicacionValue})"
    };

    private static String[] byExpedienteAsignacionRestrictions ={
		"conexidad.expedienteOrigen.id = #{expedienteMeAsignacion.expediente != null ? expedienteMeAsignacion.expediente.id : null}",
		"0 < (select count(*) from OficinaAsignacionExp oa where oa.expediente = conexidad.expedienteRelacionado and oa.tipoRadicacion = #{expedienteMeAsignacion.tipoRadicacionValue})"
    };

    private static String[] byExpedienteOrigenRestrictions ={
		"conexidad.expedienteOrigen.id = #{expedienteMeAdd.expedienteResultado != null ? expedienteMeAdd.expedienteResultado.id : null}",
		"0 < (select count(*) from OficinaAsignacionExp oa where oa.expediente = conexidad.expedienteRelacionado and oa.tipoRadicacion = #{expedienteMeAdd.tipoRadicacionValue})"
    };

    private static String[] byExpedienteHomeRestrictions ={
		"conexidad.expedienteOrigen = #{expedienteHome.isIdDefined() ? expedienteHome.instance : null}",
		"0 < (select count(*) from OficinaAsignacionExp oa where oa.expediente = conexidad.expedienteRelacionado and oa.tipoRadicacion = #{expedienteHome.instance.tipoRadicacionPrincipal})"
    };
    
    
    public List<Conexidad> getbyExpedienteAsignacionResultList(){
    	return getResultList(byExpedienteAsignacionRestrictions);
    }

    public List<Conexidad> getbyExpedienteAsignacionAllResultList(){
    	return getAllResults(byExpedienteAsignacionRestrictions);
    }

    public List<Conexidad> getbyExpedienteReasignacionResultList(){
    	return getResultList(byExpedienteReasignacionRestrictions);
    }

    public List<Conexidad> getbyExpedienteReasignacionAllResultList(){
    	return getAllResults(byExpedienteReasignacionRestrictions);
    }

    public List<Conexidad> getbyExpedienteOrigenResultList(){
    	return getResultList(byExpedienteOrigenRestrictions);
    }

    public List<Conexidad> getbyExpedienteOrigenAllResultList(){
    	return getAllResults(byExpedienteOrigenRestrictions);
    }
    
    public List<Conexidad> getbyExpedienteHomeResultList(){
    	return getResultList(byExpedienteHomeRestrictions);
    }

    public List<Conexidad> getbyExpedienteHomeAllResultList(){
    	return getAllResults(byExpedienteHomeRestrictions);
    }
    
    
    private static String[] byExpedienteRelacionadoRestrictions ={
		"conexidad.expedienteRelacionado = #{expedienteHome.isIdDefined() ? expedienteHome.instance : null}"
    };
    
    public List<Conexidad> getbyExpedienteRelacionadoResultList(){
    	return getResultList(byExpedienteRelacionadoRestrictions);
    }

    public List<Conexidad> getbyExpedienteRelacionadoAllResultList(){
    	return getAllResults(byExpedienteRelacionadoRestrictions);
    }

    @Override
    public String getEjbql() 
    { 
        return "select conexidad from Conexidad conexidad";
    }

    @Override
    public String[] getFilters()
    {
        return FILTERS;
    }
    
    @Override
    public Integer getRowsPerPage()
    {
    	return configuration.getRowsPerPage();
    }
    
	public AbstractEntityHome<Conexidad> getEntityHome() {
		return conexidadHome;
	}

	public AbstractEntitySearch<Conexidad> getEntitySearch() {
		return conexidadSearch;
	}
	
	/* (non-Javadoc)
	 * @see com.base100.expand.seam.framework.entity.AbstractEntityList#doSelection(java.lang.Object, java.lang.String)
	 */
	public String doSelection (Conexidad conexidad, String page) {
		return super.doSelection(conexidad, page);
	}

	public String doSelection (Conexidad conexidad, String page, String returnPage) {
		page = doSelection(conexidad, page);
		if (returnPage != null) {
			getEntitySearch().setReturnPage(returnPage);
		}
		return page;
	}

}
