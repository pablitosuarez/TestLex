package com.base100.lex100.controller.entity.turnoOficina;

import java.util.List;
import java.util.ArrayList;

import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;

import com.base100.lex100.component.configuration.Configuration;
import com.base100.lex100.entity.TurnoOficina;
import com.base100.lex100.component.audit.AbstractLogicalDeletionEntityList;
import com.base100.expand.seam.framework.entity.AbstractEntityHome;
import com.base100.expand.seam.framework.entity.AbstractEntitySearch;

/**
 * Class for TurnoOficina List objects.
 * 
 * Generated by Expand.
 *
 */
@Name("turnoOficinaList")
public class TurnoOficinaList extends AbstractLogicalDeletionEntityList<TurnoOficina>
{
	@In(create=true)
	private Configuration configuration;
    @In(create=true)
    private TurnoOficinaSearch turnoOficinaSearch;
    @In(create=true)
    private TurnoOficinaHome turnoOficinaHome;
    private static final String[] FILTERS = {
		"turnoOficina.oficina.camara = #{sessionState.globalCamara}",
		"turnoOficina.desdeFecha <= #{turnoOficinaSearch.filter.hastaFecha}",
		"turnoOficina.hastaFecha >= #{turnoOficinaSearch.filter.desdeFecha}",
		"lower(turnoOficina.oficina.codigo) like #{likePattern[turnoOficinaSearch.filter.oficinaCodigo]}",
		"lower(turnoOficina.oficina.descripcion) like #{likePattern[turnoOficinaSearch.filter.oficinaDescripcion]}",
		"lower(turnoOficina.oficina.nombreResponsable) like #{likePattern[turnoOficinaSearch.filter.oficinaNombreResponsable]}",
		"turnoOficina.oficina.competencia = #{turnoOficinaSearch.filter.oficinaCompetencia}",
		"turnoOficina.oficina.tipoInstancia = #{turnoOficinaSearch.filter.oficinaTipoInstancia}",
		"turnoOficina.oficina.tipoOficina = #{turnoOficinaSearch.filter.oficinaTipoOficina}",
		"turnoOficina.oficina.camara = #{turnoOficinaSearch.filter.oficinaCamara}",


    };
	
    private static String[] byOficinaRestrictions ={
		"turnoOficina.oficina = #{oficinaHome.isIdDefined() ? oficinaHome.instance : null}"
    };
    
    public List<TurnoOficina> getbyOficinaResultList(){
    	return getResultList(byOficinaRestrictions);
    }

    public List<TurnoOficina> getbyOficinaAllResultList(){
    	return getAllResults(byOficinaRestrictions);
    }

    public List<TurnoOficina> getbyOficinaResultListWithNew(){
		List<TurnoOficina> list = new ArrayList<TurnoOficina>(getResultList(byOficinaRestrictions));
		list.add(getEntityHome().getEmptyInstance());
		return list;
	}
    private static String[] bySorteoRestrictions ={
		"turnoOficina.sorteo = #{sorteoHome.isIdDefined() ? sorteoHome.instance : null}"
    };
    
    public List<TurnoOficina> getbySorteoResultList(){
    	return getResultList(bySorteoRestrictions);
    }

    public List<TurnoOficina> getbySorteoAllResultList(){
    	return getAllResults(bySorteoRestrictions);
    }

    public List<TurnoOficina> getbySorteoResultListWithNew(){
		List<TurnoOficina> list = new ArrayList<TurnoOficina>(getResultList(bySorteoRestrictions));
		list.add(getEntityHome().getEmptyInstance());
		return list;
	}

    public List<TurnoOficina> getbyParentAllResults(){
    	return getbySorteoAllResultList();
    }

    @Override
    public String getEjbql() 
    { 
        return "select turnoOficina from TurnoOficina turnoOficina";
    }

    @Override
    public String[] getFilters()
    {
        return FILTERS;
    }
    
    @Override
    public Integer getRowsPerPage()
    {
    	return configuration.getRowsPerPage();
    }
    
	public AbstractEntityHome<TurnoOficina> getEntityHome() {
		return turnoOficinaHome;
	}

	public AbstractEntitySearch<TurnoOficina> getEntitySearch() {
		return turnoOficinaSearch;
	}
	
	/* (non-Javadoc)
	 * @see com.base100.expand.seam.framework.entity.AbstractEntityList#doSelection(java.lang.Object, java.lang.String)
	 */
	public String doSelection (TurnoOficina turnoOficina, String page) {
		return super.doSelection(turnoOficina, page);
	}

	public String doSelection (TurnoOficina turnoOficina, String page, String returnPage) {
		page = doSelection(turnoOficina, page);
		if (returnPage != null) {
			getEntitySearch().setReturnPage(returnPage);
		}
		return page;
	}

	/* (non-Javadoc)
	 * @see com.base100.expand.seam.framework.entity.AbstractEntityList#doLineSelection(java.lang.Object, java.lang.String, java.lang.String)
	 */
	public String doLineSelection(TurnoOficina turnoOficina, String toPage, String fromPage) {
		return super.doLineSelection(turnoOficina, toPage, fromPage);
	}	


}
