package com.base100.lex100.controller.entity.criterioCnx;

import java.util.List;
import java.util.ArrayList;

import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;

import com.base100.lex100.component.configuration.Configuration;
import com.base100.lex100.entity.CriterioCnx;
import com.base100.lex100.component.audit.AbstractLogicalDeletionEntityList;
import com.base100.expand.seam.framework.entity.AbstractEntityHome;
import com.base100.expand.seam.framework.entity.AbstractEntitySearch;

/**
 * Class for CriterioCnx List objects.
 * 
 * Generated by Expand.
 *
 */
@Name("criterioCnxList")
public class CriterioCnxList extends AbstractLogicalDeletionEntityList<CriterioCnx>
{
	@In(create=true)
	private Configuration configuration;
    @In(create=true)
    private CriterioCnxSearch criterioCnxSearch;
    @In(create=true)
    private CriterioCnxHome criterioCnxHome;
    private static final String[] FILTERS = {
		"criterioCnx.camara = #{sessionState.globalCamara}",
		"(criterioCnx.materia is null or criterioCnx.materia in (#{sessionState.globalMateriaSet}))",
		"lower(criterioCnx.nombre) like #{likePattern[criterioCnxSearch.filter.nombre]}",
		"criterioCnx.camara = #{criterioCnxSearch.filter.camara}",
		"criterioCnx.materia = #{criterioCnxSearch.filter.materia}",
		"criterioCnx.objetoJuicio = #{criterioCnxSearch.filter.objetoJuicio}",
		"criterioCnx.tema = #{criterioCnxSearch.filter.tema}",
		"criterioCnx.tipoCausa = #{criterioCnxSearch.filter.tipoCausa}",

    };
	
    private static String[] byCamaraRestrictions ={
		"criterioCnx.camara = #{camaraHome.isIdDefined() ? camaraHome.instance : null}"
    };
    
    public List<CriterioCnx> getbyCamaraResultList(){
    	return getResultList(byCamaraRestrictions);
    }

    public List<CriterioCnx> getbyCamaraAllResultList(){
    	return getAllResults(byCamaraRestrictions);
    }
    private static String[] byMateriaRestrictions ={
		"criterioCnx.materia = #{materiaHome.isIdDefined() ? materiaHome.instance : null}"
    };
    
    public List<CriterioCnx> getbyMateriaResultList(){
    	return getResultList(byMateriaRestrictions);
    }

    public List<CriterioCnx> getbyMateriaAllResultList(){
    	return getAllResults(byMateriaRestrictions);
    }
    private static String[] byObjetoJuicioRestrictions ={
		"criterioCnx.objetoJuicio = #{objetoJuicioHome.isIdDefined() ? objetoJuicioHome.instance : null}"
    };
    
    public List<CriterioCnx> getbyObjetoJuicioResultList(){
    	return getResultList(byObjetoJuicioRestrictions);
    }

    public List<CriterioCnx> getbyObjetoJuicioAllResultList(){
    	return getAllResults(byObjetoJuicioRestrictions);
    }
    private static String[] byTemaRestrictions ={
		"criterioCnx.tema = #{temaHome.isIdDefined() ? temaHome.instance : null}"
    };
    
    public List<CriterioCnx> getbyTemaResultList(){
    	return getResultList(byTemaRestrictions);
    }

    public List<CriterioCnx> getbyTemaAllResultList(){
    	return getAllResults(byTemaRestrictions);
    }

    private static String[] byTipoCausaRestrictions ={
		"criterioCnx.tipoCausa = #{tipoCausaHome.isIdDefined() ? tipoCausaHome.instance : null}"
    };
    
    public List<CriterioCnx> getbyTipoCausaResultList(){
    	return getResultList(byTipoCausaRestrictions);
    }

    public List<CriterioCnx> getbyTipoCausaAllResultList(){
    	return getAllResults(byTipoCausaRestrictions);
    }

    @Override
    public String getEjbql() 
    { 
        return "select criterioCnx from CriterioCnx criterioCnx";
    }

    @Override
    public String[] getFilters()
    {
        return FILTERS;
    }
    
    @Override
    public Integer getRowsPerPage()
    {
    	return configuration.getRowsPerPage();
    }
    
	public AbstractEntityHome<CriterioCnx> getEntityHome() {
		return criterioCnxHome;
	}

	public AbstractEntitySearch<CriterioCnx> getEntitySearch() {
		return criterioCnxSearch;
	}
	
	/* (non-Javadoc)
	 * @see com.base100.expand.seam.framework.entity.AbstractEntityList#doSelection(java.lang.Object, java.lang.String)
	 */
	public String doSelection (CriterioCnx criterioCnx, String page) {
		return super.doSelection(criterioCnx, page);
	}

	public String doSelection (CriterioCnx criterioCnx, String page, String returnPage) {
		page = doSelection(criterioCnx, page);
		if (returnPage != null) {
			getEntitySearch().setReturnPage(returnPage);
		}
		return page;
	}

	/* (non-Javadoc)
	 * @see com.base100.expand.seam.framework.entity.AbstractEntityList#doLineSelection(java.lang.Object, java.lang.String, java.lang.String)
	 */
	public String doLineSelection(CriterioCnx criterioCnx, String toPage, String fromPage) {
		return super.doLineSelection(criterioCnx, toPage, fromPage);
	}	


}
