package com.base100.lex100.controller.entity.sorteoAud;

import java.util.List;
import java.util.ArrayList;

import org.jboss.seam.annotations.In;
import org.jboss.seam.annotations.Name;

import com.base100.lex100.component.configuration.Configuration;
import com.base100.lex100.entity.SorteoAud;
import com.base100.expand.seam.framework.entity.AbstractEntityList;
import com.base100.expand.seam.framework.entity.AbstractEntityHome;
import com.base100.expand.seam.framework.entity.AbstractEntitySearch;

/**
 * Class for SorteoAud List objects.
 * 
 * Generated by Expand.
 *
 */
@Name("sorteoAudList")
public class SorteoAudList extends AbstractEntityList<SorteoAud>
{
	@In(create=true)
	private Configuration configuration;
    @In(create=true)
    private SorteoAudSearch sorteoAudSearch;
    @In(create=true)
    private SorteoAudHome sorteoAudHome;
    private static final String[] FILTERS = {
		"sorteoAud.camara = #{sessionState.globalCamara}",
		"lower(sorteoAud.codigo) like #{likePattern[sorteoAudSearch.filter.codigo]}",
		"lower(sorteoAud.descripcion) like #{likePattern[sorteoAudSearch.filter.descripcion]}",
		"lower(sorteoAud.rubros) like #{likePattern[sorteoAudSearch.filter.rubros]}",
		"sorteoAud.camara = #{sorteoAudSearch.filter.camara}",
		"sorteoAud.tipoInstancia = #{sorteoAudSearch.filter.tipoInstancia}",
		"sorteoAud.competencia = #{sorteoAudSearch.filter.competencia}",
		"sorteoAud.tipoOficina = #{sorteoAudSearch.filter.tipoOficina}",
		"lower(sorteoAud.usuario) like #{likePattern[sorteoAudSearch.filter.usuario]}",
		"lower(sorteoAud.descripcionModificacion) like #{likePattern[sorteoAudSearch.filter.descripcionModificacion]}",
		"sorteoAud.fechaModificacion >= #{sorteoAudSearch.filter.fechaModificacionDesde}",
		"sorteoAud.fechaModificacion <= #{sorteoAudSearch.filter.fechaModificacionHastaFinal}",
    };
	
    private static String[] byCamaraRestrictions ={
		"sorteoAud.camara = #{camaraHome.isIdDefined() ? camaraHome.instance : null}"
    };
    
    public List<SorteoAud> getbyCamaraResultList(){
    	return getResultList(byCamaraRestrictions);
    }

    public List<SorteoAud> getbyCamaraAllResultList(){
    	return getAllResults(byCamaraRestrictions);
    }
    private static String[] byTipoInstanciaRestrictions ={
		"sorteoAud.tipoInstancia = #{tipoInstanciaHome.isIdDefined() ? tipoInstanciaHome.instance : null}"
    };
    
    public List<SorteoAud> getbyTipoInstanciaResultList(){
    	return getResultList(byTipoInstanciaRestrictions);
    }

    public List<SorteoAud> getbyTipoInstanciaAllResultList(){
    	return getAllResults(byTipoInstanciaRestrictions);
    }
    private static String[] byCompetenciaRestrictions ={
		"sorteoAud.competencia = #{competenciaHome.isIdDefined() ? competenciaHome.instance : null}"
    };
    
    public List<SorteoAud> getbyCompetenciaResultList(){
    	return getResultList(byCompetenciaRestrictions);
    }

    public List<SorteoAud> getbyCompetenciaAllResultList(){
    	return getAllResults(byCompetenciaRestrictions);
    }
    private static String[] byTipoOficinaRestrictions ={
		"sorteoAud.tipoOficina = #{tipoOficinaHome.isIdDefined() ? tipoOficinaHome.instance : null}"
    };
    
    public List<SorteoAud> getbyTipoOficinaResultList(){
    	return getResultList(byTipoOficinaRestrictions);
    }

    public List<SorteoAud> getbyTipoOficinaAllResultList(){
    	return getAllResults(byTipoOficinaRestrictions);
    }

    @Override
    public String getEjbql() 
    { 
        return "select sorteoAud from SorteoAud sorteoAud";
    }

    @Override
    public String[] getFilters()
    {
        return FILTERS;
    }
    
    @Override
    public Integer getRowsPerPage()
    {
    	return configuration.getRowsPerPage();
    }
    
	public AbstractEntityHome<SorteoAud> getEntityHome() {
		return sorteoAudHome;
	}

	public AbstractEntitySearch<SorteoAud> getEntitySearch() {
		return sorteoAudSearch;
	}
	
	/* (non-Javadoc)
	 * @see com.base100.expand.seam.framework.entity.AbstractEntityList#doSelection(java.lang.Object, java.lang.String)
	 */
	public String doSelection (SorteoAud sorteoAud, String page) {
		return super.doSelection(sorteoAud, page);
	}

	public String doSelection (SorteoAud sorteoAud, String page, String returnPage) {
		page = doSelection(sorteoAud, page);
		if (returnPage != null) {
			getEntitySearch().setReturnPage(returnPage);
		}
		return page;
	}



}
