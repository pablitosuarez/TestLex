package com.base100.lex100.controller.entity.turnoFiscalia;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.faces.event.ValueChangeEvent;
import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.intercept.BypassInterceptors;

import com.base100.expand.seam.framework.entity.AbstractEntitySearch;
import com.base100.lex100.component.enumeration.TipoOficinaTurnoEnumeration;
import com.base100.lex100.component.misc.DateUtil;
import com.base100.lex100.controller.entity.fiscalia.FiscaliaSearch;
import com.base100.lex100.controller.entity.oficina.OficinaSearch;
import com.base100.lex100.entity.Camara;
import com.base100.lex100.entity.Competencia;
import com.base100.lex100.entity.Fiscalia;
import com.base100.lex100.entity.Oficina;
import com.base100.lex100.entity.TipoInstancia;
import com.base100.lex100.entity.TurnoFiscalia;



/**
 * Class for TurnoFiscalia search filters.
 * 
 * Generated by Expand.
 *
 */
@Name("turnoFiscaliaSearch")
@BypassInterceptors
public class TurnoFiscaliaSearch extends AbstractEntitySearch<TurnoFiscalia>
{

	static public final String BY_UUID_STMT = 
		"FROM TurnoFiscalia turnoFiscalia WHERE " +
	    "turnoFiscalia.uuid = :uuid and status <> -1";

	static public final String BY_OFICINA_STMT = 
		"FROM TurnoFiscalia turnoFiscalia WHERE " +
	    "turnoFiscalia.oficina = :oficina and desdeFecha <= :today and turnoFiscalia.tipoOficinaTurno = :tipoOficinaTurno and status <> -1 order by desdeFecha desc";

	static public final String TURNOS_ACTUALES_STMT = 
		"FROM TurnoFiscalia turnoFiscalia WHERE " +
	    "desdeFecha <= :today and oficina.camara = :camara and turnoFiscalia.tipoOficinaTurno = :tipoOficinaTurno and status <> -1 order by desdeFecha desc";
		
	
	private Date fromDesdeFecha;
	private Date toDesdeFecha;
	private String fiscaliaDescripcion;
	private Competencia fiscaliaCompetencia;
	private TipoInstancia fiscaliaTipoInstancia;

	private Integer fiscalia;
	private Integer fiscaliaCodigo;
	private Oficina oficina;
	private String oficinaCodigo;
	private String tipoOficinaTurno;

	private TurnoFiscaliaSearch filter;

	public TurnoFiscaliaSearch() {
		setDefaultOrder("turnoFiscalia.desdeFecha desc");
	}

	@Override
	public void clear() {
		this.fromDesdeFecha = null;
		this.toDesdeFecha = null;
		this.fiscaliaDescripcion = null;
		this.fiscaliaCompetencia = null;
		this.fiscaliaTipoInstancia = null;
		this.fiscalia = null;
		this.fiscaliaCodigo = null;
		this.oficina = null;
		this.oficinaCodigo = null;
		this.tipoOficinaTurno = null;
	}

	@Override
	public String getInitialPanelState()  {
		if (true
			&& this.fromDesdeFecha == null
			&& this.toDesdeFecha == null
			&& this.fiscaliaDescripcion == null
			&& this.fiscaliaCompetencia == null
			&& this.fiscaliaTipoInstancia == null
			&& this.fiscalia == null
			&& this.oficina == null
			&& this.tipoOficinaTurno == null

	    ){
			return getPanelState();
		} else {
			return "open";
		}
	}

	@Override
	public boolean hasActiveSearch() {
		// TODO Auto-generated method stub
		return false;
	}


    public TurnoFiscalia findByUuid(String uuid) {
    	return findByUuid (getEntityManager(), uuid); 
	}

    static public TurnoFiscalia findByUuid(EntityManager entityManager, String turnoFiscaliaUuid) {
		Query query = entityManager.createQuery(BY_UUID_STMT);
		TurnoFiscalia turnoFiscalia = null;
		try {
			query.setParameter("uuid", turnoFiscaliaUuid);
			turnoFiscalia = (TurnoFiscalia)query.getSingleResult();
		} catch (Exception e) {
		}
		return turnoFiscalia;
	}

    @SuppressWarnings("unchecked")
	static public TurnoFiscalia findByOficina(EntityManager entityManager, Oficina oficina, String tipoOficinaTurno) {
		Query query = entityManager.createQuery(BY_OFICINA_STMT);
		query.setParameter("today", DateUtil.getToday());
		query.setParameter("tipoOficinaTurno", tipoOficinaTurno);
		List<TurnoFiscalia> turnosFiscalia = query.setMaxResults(1).
			setParameter("oficina", oficina).
			getResultList();

		if(turnosFiscalia.size() > 0) {
			return turnosFiscalia.get(0);
		}
		return null;
	}

    @SuppressWarnings("unchecked")
	static public List<Oficina> findOficinasForOficinaTurno(EntityManager entityManager, Camara camara, String tipoOficinaTurno, int numeroOficinaTurno) {
    	List<Oficina> ret = new ArrayList<Oficina>();
    	Map<Integer, TurnoFiscalia> procesados = new HashMap<Integer, TurnoFiscalia>();
    	
		Query query = entityManager.createQuery(TURNOS_ACTUALES_STMT);
		query.setParameter("today", DateUtil.getToday());
		query.setParameter("tipoOficinaTurno", tipoOficinaTurno);
		query.setParameter("camara", camara);
		for(TurnoFiscalia turnoFiscalia: (List<TurnoFiscalia>) query.getResultList()){
			Oficina oficina = turnoFiscalia.getOficina();
			if(procesados.get(oficina.getId()) == null){
				if(turnoFiscalia.getFiscalia() == numeroOficinaTurno){
					ret.add(turnoFiscalia.getOficina());
				}
				procesados.put(oficina.getId(), turnoFiscalia);				
			}
		}
		return ret;
	}
    /**
     * Returns the fromDesdeFecha search filter
     * 
     * @return	the fromDesdeFecha search filter
     */
    public Date getFromDesdeFecha() {
    	return fromDesdeFecha;
    }

    /**
     * Sets the fromDesdeFecha search filter
     * 
     * @param fromDesdeFecha the fromDesdeFecha search filter
     */
    public void setFromDesdeFecha(Date fromDesdeFecha) {
    	this.fromDesdeFecha = fromDesdeFecha;
    }
    
   /**
     * Clears the fromDesdeFecha search filter
     */
    public void clearFromDesdeFecha() {
    	setFromDesdeFecha(null);
    }

    /**
     * Returns the toDesdeFecha search filter
     * 
     * @return	the toDesdeFecha search filter
     */
    public Date getToDesdeFecha() {
    	return toDesdeFecha;
    }

    /**
     * Sets the toDesdeFecha search filter
     * 
     * @param toDesdeFecha the toDesdeFecha search filter
     */
    public void setToDesdeFecha(Date toDesdeFecha) {
    	this.toDesdeFecha = toDesdeFecha;
    }
    
   /**
     * Clears the toDesdeFecha search filter
     */
    public void clearToDesdeFecha() {
    	setToDesdeFecha(null);
    }

    /**
     * Returns the fiscaliaDescripcion search filter
     * 
     * @return	the fiscaliaDescripcion search filter
     */
    public String getFiscaliaDescripcion() {
    	return fiscaliaDescripcion;
    }

    /**
     * Sets the fiscaliaDescripcion search filter
     * 
     * @param fiscaliaDescripcion the fiscaliaDescripcion search filter
     */
    public void setFiscaliaDescripcion(String fiscaliaDescripcion) {
    	this.fiscaliaDescripcion = fiscaliaDescripcion;
    }
    
   /**
     * Clears the fiscaliaDescripcion search filter
     */
    public void clearFiscaliaDescripcion() {
    	setFiscaliaDescripcion(null);
    }

    /**
     * Returns the fiscaliaCompetencia search filter
     * 
     * @return	the fiscaliaCompetencia search filter
     */
    public Competencia getFiscaliaCompetencia() {
    	return fiscaliaCompetencia;
    }

    /**
     * Sets the fiscaliaCompetencia search filter
     * 
     * @param fiscaliaCompetencia the fiscaliaCompetencia search filter
     */
    public void setFiscaliaCompetencia(Competencia fiscaliaCompetencia) {
    	this.fiscaliaCompetencia = fiscaliaCompetencia;
    }
    
   /**
     * Clears the fiscaliaCompetencia search filter
     */
    public void clearFiscaliaCompetencia() {
    	setFiscaliaCompetencia(null);
    }

    /**
     * Returns the fiscaliaTipoInstancia search filter
     * 
     * @return	the fiscaliaTipoInstancia search filter
     */
    public TipoInstancia getFiscaliaTipoInstancia() {
    	return fiscaliaTipoInstancia;
    }

    /**
     * Sets the fiscaliaTipoInstancia search filter
     * 
     * @param fiscaliaTipoInstancia the fiscaliaTipoInstancia search filter
     */
    public void setFiscaliaTipoInstancia(TipoInstancia fiscaliaTipoInstancia) {
    	this.fiscaliaTipoInstancia = fiscaliaTipoInstancia;
    }
    
   /**
     * Clears the fiscaliaTipoInstancia search filter
     */
    public void clearFiscaliaTipoInstancia() {
    	setFiscaliaTipoInstancia(null);
    }


    /**
     * Returns the fiscalia search filter
     * 
     * @return	the fiscalia search filter
     */
    public Integer getFiscalia() {
    	return fiscalia;
    }

    /**
     * Sets the fiscalia search filter
     * 
     * @param fiscalia the fiscalia search filter
     */
    public void setFiscalia(Integer fiscalia) {
    	this.fiscalia = fiscalia;
		this.fiscaliaCodigo = null;
    }
    
   /**
     * Clears the fiscalia search filter
     */
    public void clearFiscalia() {
    	setFiscalia(null);
    }
    /**
     * Returns the oficina search filter
     * 
     * @return	the oficina search filter
     */
    public Oficina getOficina() {
    	return oficina;
    }

    /**
     * Sets the oficina search filter
     * 
     * @param oficina the oficina search filter
     */
    public void setOficina(Oficina oficina) {
    	this.oficina = oficina;
		this.oficinaCodigo = null;
    }
    
   /**
     * Clears the oficina search filter
     */
    public void clearOficina() {
    	setOficina(null);
    }

	public String getOficinaCodigo() {
		if(this.oficinaCodigo == null){
			this.oficinaCodigo = (getOficina() != null)? getOficina().getCodigo(): null;
		}
		return this.oficinaCodigo;
	}

	public void setOficinaCodigo(String oficinaCodigo) {
		this.oficinaCodigo = oficinaCodigo;
	}

	public void onChangeOficinaCodigo(ValueChangeEvent event) {
		setOficinaCodigo((String)(event.getNewValue()));
		updateOficina();
	}
	
	private void updateOficina() {
		setOficina(OficinaSearch.findByNaturalKey(getEntityManager(), this.oficinaCodigo));
	}
	
	public String getTipoOficinaTurno() {
		return tipoOficinaTurno;
	}

	public void setTipoOficinaTurno(String tipoOficinaTurno) {
		this.tipoOficinaTurno = tipoOficinaTurno;
	}

	public TurnoFiscaliaSearch getFilter() {
		if (filter == null) {
			filter = new TurnoFiscaliaSearch();
		}
		return filter;
	}

    @Override
    public void updateFilters() {
		getFilter().setFromDesdeFecha(getFromDesdeFecha());
		getFilter().setToDesdeFecha(getToDesdeFecha());
		getFilter().setFiscaliaDescripcion(getFiscaliaDescripcion());
		getFilter().setFiscaliaCompetencia(getFiscaliaCompetencia());
		getFilter().setFiscaliaTipoInstancia(getFiscaliaTipoInstancia());

		getFilter().setFiscalia(getFiscalia());
		getFilter().setFiscalia(getFiscalia());
		getFilter().setOficina(getOficina());
		getFilter().setOficinaCodigo(getOficinaCodigo());
		getFilter().setTipoOficinaTurno(getTipoOficinaTurno());
	}
    


}

