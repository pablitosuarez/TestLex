package com.base100.lex100.controller.entity.turnoFiscaliaSala;

import com.base100.lex100.entity.Camara;
import com.base100.lex100.entity.Competencia;
import com.base100.lex100.entity.TurnoFiscaliaSala;
import org.jboss.seam.annotations.Name;
import org.jboss.seam.annotations.intercept.BypassInterceptors;


import com.base100.expand.seam.framework.entity.AbstractEntitySearch;

/**
 * Class for TurnoFiscaliaSala search filters.
 * 
 * Generated by Expand.
 *
 */
@Name("turnoFiscaliaSalaSearch")
@BypassInterceptors
public class TurnoFiscaliaSalaSearch extends AbstractEntitySearch<TurnoFiscaliaSala>
{


	private Competencia competencia;
	private Camara camara;

	private TurnoFiscaliaSalaSearch filter;

	public TurnoFiscaliaSalaSearch() {
		setDefaultOrder("turnoFiscaliaSala.uuid");
	}

	@Override
	public void clear() {
		this.competencia = null;
		this.camara = null;
	}

	@Override
	public String getInitialPanelState()  {
		if (true
			&& this.competencia == null
			&& this.camara == null

	    ){
			return getPanelState();
		} else {
			return "open";
		}
	}

	@Override
	public boolean hasActiveSearch() {
		// TODO Auto-generated method stub
		return false;
	}



    /**
     * Returns the competencia search filter
     * 
     * @return	the competencia search filter
     */
    public Competencia getCompetencia() {
    	return competencia;
    }

    /**
     * Sets the competencia search filter
     * 
     * @param competencia the competencia search filter
     */
    public void setCompetencia(Competencia competencia) {
    	this.competencia = competencia;
    }
    
   /**
     * Clears the competencia search filter
     */
    public void clearCompetencia() {
    	setCompetencia(null);
    }

    /**
     * Returns the camara search filter
     * 
     * @return	the camara search filter
     */
    public Camara getCamara() {
    	return camara;
    }

    /**
     * Sets the camara search filter
     * 
     * @param camara the camara search filter
     */
    public void setCamara(Camara camara) {
    	this.camara = camara;
    }
    
   /**
     * Clears the camara search filter
     */
    public void clearCamara() {
    	setCamara(null);
    }



	public TurnoFiscaliaSalaSearch getFilter() {
		if (filter == null) {
			filter = new TurnoFiscaliaSalaSearch();
		}
		return filter;
	}

    @Override
    public void updateFilters() {
    	super.updateFilters();
		getFilter().setCompetencia(getCompetencia());
		getFilter().setCamara(getCamara());
	}


}

